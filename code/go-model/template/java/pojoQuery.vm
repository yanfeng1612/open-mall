{{if eq .config.Auto true}}
package {{.config.PackageName}}.domain.auto;
{{else}}
package {{.config.PackageName}}.domain;
{{end}}

import java.util.List;

import {{.config.PackageName}}.utils.Query;

import java.math.BigDecimal;
import java.util.Date;

import lombok.Data;

/**
 * {{.backendObject.Comment}}
 * @author {{.author}}
 * @date {{.date}}
 **/
 @Data
public class {{.backendObject.JavaBeanName}}Query extends Query {

    static final long serialVersionUID = 1L;

    public {{.backendObject.JavaBeanName}}Query() {}

    private {{.backendObject.JavaBeanName}}Query(Builder builder) {
        {{range $i,$field := .backendObject.Columns}}
        this.{{$field.JavaFieldName}} = builder.{{$field.JavaFieldName}};{{end}}
    }

    {{range $i,$field := .backendObject.Columns}}
    /**
     * {{$field.Comment}}
     */
    private {{$field.JavaFieldType}} {{$field.JavaFieldName}};
    {{end}}

    public static class Builder {
    {{range $i,$field := .backendObject.Columns}}
        /**
        * {{$field.Comment}}
        */
        private {{$field.JavaFieldType}} {{$field.JavaFieldName}};
    {{end}}

    {{range $i,$field := .backendObject.Columns}}
        /**
         * {{$field.Comment}}
         */
        public Builder {{$field.JavaFieldName}}({{$field.JavaFieldType}} {{$field.JavaFieldName}}) {
            this.{{$field.JavaFieldName}} = {{$field.JavaFieldName}};
            return this;
        }
    {{end}}

        public {{.backendObject.JavaBeanName}}Query build() {
            return new {{.backendObject.JavaBeanName}}Query(this);
        }
    }

}
