<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

{{if eq .config.Auto true}}
<mapper namespace="{{.config.PackageName}}.dao.auto.{{.backendObject.JavaBeanName}}Mapper">
{{else}}
<mapper namespace="{{.config.PackageName}}.dao.{{.backendObject.JavaBeanName}}Mapper">
{{end}}

    {{if eq .config.Auto true}}
    <resultMap id="baseResultMap" type="{{.config.PackageName}}.domain.auto.{{.backendObject.JavaBeanName}}">
    {{else}}
    <resultMap id="baseResultMap" type="{{.config.PackageName}}.domain.{{.backendObject.JavaBeanName}}">
    {{end}}
        {{range $i,$field := .backendObject.Columns}}<result property="{{$field.JavaFieldName}}" column="{{$field.Name}}" />
        {{end}}
    </resultMap>

    <sql id="queryColumns">
        <trim prefixOverrides=",">
        {{range $i,$field := .backendObject.Columns}}
            ,{{$field.Name}}	/* {{$field.Comment}} */
        {{end}}
        </trim>
    </sql>

    <sql id="wherecontation">
        <if test="query!= null">
        {{range $i,$field := .backendObject.Columns}}
        {{if eq $field.JavaFieldType "String"}}
            <if test="query.{{$field.JavaFieldName}} != null and query.{{$field.JavaFieldName}} != ''">
                and {{$field.Name}} = #{query.{{$field.JavaFieldName}}} /* {{$field.Comment}} */
            </if>
        {{else}}
            <if test="query.{{$field.JavaFieldName}} != null">
                and {{$field.Name}} = #{query.{{$field.JavaFieldName}}} /* {{$field.Comment}} */
            </if>
        {{end}}
        {{if eq $field.InListQuery 1}}
            <if test="query.{{$field.JavaFieldName}}List != null">
                and {{$field.Name}} in
                <foreach collection="query.{{$field.JavaFieldName}}List" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        {{end}}
        {{if eq $field.SingleQuery 1}}
            <if test="query.{{$field.JavaFieldName}}Start != null">
                and {{$field.Name}} &gt;= #{query.{{$field.JavaFieldName}}Start} /* {{$field.Comment}}Start */
            </if>
            <if test="query.{{$field.JavaFieldName}}End != null">
                and {{$field.Name}} &lt;= #{query.{{$field.JavaFieldName}}End} /* {{$field.Comment}}End */
            </if>
        {{end}}
        {{end}}
        </if>
    </sql>

    <sql id="getInsertField">
        <trim prefixOverrides=",">
        {{range $i,$field := .backendObject.Columns}}
        <if test="{{$field.JavaFieldName}} != null">
            ,{{$field.Name}} /* {{$field.Comment}} */
        </if>
        {{end}}
        </trim>
    </sql>

    <sql id="getInsertFieldValue">
        <trim prefixOverrides=",">
        {{range $i,$field := .backendObject.Columns}}
        <if test="{{$field.JavaFieldName}} != null">
            ,#{{$field.JavaFieldName}} /* {{$field.Comment}} */
        </if>
        {{end}}
        </trim>
    </sql>

    <insert id="insert" parameterType="{{.backendObject.JavaBeanName}}"  useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        /* {{.backendObject.Comment}} */
        INSERT  INTO  {{.backendObject.Name}}
        (
            <include refid="getInsertField" />
        )
        VALUES (
            <include refid="getInsertFieldValue" />
        )
    </insert>

    <insert id="insertBatch" parameterType="java.util.List">
        INSERT  INTO  {{.backendObject.Name}}
        <trim prefix="(" suffix=")" prefixOverrides=",">
        {{range $i,$field := .backendObject.Columns}}
            ,{{$field.Name}}	/* {{$field.Comment}} */
        {{end}}
        </trim>
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            <trim prefix="(" suffix=")" prefixOverrides=",">
            {{range $i,$field := .backendObject.Columns}}
                ,#{item.{{$field.JavaFieldName}}}	/* {{$field.Comment}} */
            {{end}}
            </trim>
        </foreach>
    </insert>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM {{.backendObject.Name}} WHERE id = #{id}
    </delete>

    <update id="update" parameterType="{{.backendObject.JavaBeanName}}" >
        UPDATE  {{.backendObject.Name}}
        /* {{.backendObject.Comment}} */
        <trim prefix="SET" prefixOverrides=",">
        {{range $i,$field := .backendObject.Columns}}
        {{if eq $field.UpdateField 1}}
            <if test="{{$field.JavaFieldName}} != null">
                ,{{$field.Name}} = #{{$field.JavaFieldName}} /* {{$field.Comment}} */
            </if>
        {{end}}
        {{end}}
        </trim>
        WHERE
        id = #{id}		/* id */
    </update>

    <select id="findById" parameterType="{{.backendObject.JavaBeanName}}"  resultMap="baseResultMap">
        SELECT
        <include refid="queryColumns" />
        FROM   {{.backendObject.Name}}  /* {{.backendObject.Comment}} */
        WHERE
        id = #{id}		/* id */
    </select>

    <select id="getAllList" parameterType="{{.config.PackageName}}.utils.Query"  resultMap="baseResultMap">
        SELECT
        <include refid="queryColumns" />
        FROM    {{.backendObject.Name}}  /* {{.backendObject.Comment}} */
        WHERE 1 = 1
        <include refid="wherecontation"/>
        ORDER BY id DESC
    </select>

    <select id="getPagenationList" parameterType="{{.config.PackageName}}.utils.PageQueryWrapper" resultMap="baseResultMap">
        SELECT
        <include refid="queryColumns" />
        FROM   {{.backendObject.Name}} /*  {{.backendObject.Comment}} */
        WHERE 1=1
        <include refid="wherecontation"/>
        ORDER BY id DESC
        LIMIT  #{startRow} ,#{endRow}
    </select>

    <select id="getPagenationListById" parameterType="{{.config.PackageName}}.utils.IdPageQuery" resultMap="baseResultMap">
        SELECT
        <include refid="queryColumns" />
        FROM   {{.backendObject.Name}} /*  {{.backendObject.Comment}} */
        WHERE id > #{minId}
        <include refid="wherecontation"/>
        ORDER BY id ASC
        LIMIT #{pageSize}
    </select>

    <select id="getCount" parameterType="{{.config.PackageName}}.utils.PageQuery" resultType="java.lang.Long">
        SELECT COUNT(*)  FROM  {{.backendObject.Name}}  /*  {{.backendObject.Comment}} */
        WHERE 1 = 1
        <include refid="wherecontation"/>
    </select>

    <select id="getCountBy" parameterType="{{.config.PackageName}}.utils.IdPageQuery" resultType="java.lang.Long">
        SELECT count(1)  FROM  {{.backendObject.Name}}  /*  {{.backendObject.Comment}} */
        WHERE 1 = 1
        <include refid="wherecontation"/>
    </select>

    <select id="getTotalCount" parameterType="{{.config.PackageName}}.utils.Query" resultType="java.lang.Long">
        SELECT count(1)  FROM  {{.backendObject.Name}} /* {{.backendObject.Comment}} */
        WHERE 1=1
        <include refid="wherecontation"/>
    </select>

    {{range $i,$field := .backendObject.Columns}}
        {{if eq $field.SingleQuery 1}}
            <select id="search{{.backendObject.JavaBeanName}}By${field.JavaFieldNameUF}" parameterType="{{.backendObject.JavaBeanName}}" resultMap="baseResultMap">
                    SELECT
                    <include refid="queryColumns" />
                    FROM {{.backendObject.Name}} /* {{.backendObject.Comment}} */
                    WHERE
                    {{$field.Name}} = #{{$field.JavaFieldName}}
            </select>
        {{end}}
    {{end}}

    {{range $i,$field := .backendObject.Columns}}
        {{if eq $field.SingleQuery 1}}
            <select id="search{{.backendObject.JavaBeanName}}By${field.JavaFieldNameUF}" parameterType="{{.backendObject.JavaBeanName}}" resultMap="baseResultMap">
                    SELECT
                    <include refid="queryColumns" />
                    FROM {{.backendObject.Name}} /* {{.backendObject.Comment}} */
                    WHERE
                    {{$field.Name}} = #{{$field.JavaFieldName}}
            </select>
        {{end}}
    {{end}}

    {{range $i,$field := .backendObject.Columns}}
        {{if eq $field.WhereUpdateField 1}}
            <update id="update${backendObject.javaBeanName}By${field.JavaFieldNameUF}" parameterType="{{.backendObject.JavaBeanName}}" >
                    UPDATE  {{.backendObject.Name}}
                    <trim prefix="SET" suffixOverrides=",">
                    {{range $i,$field := .backendObject.Columns}}
                    {{if eq $field.UpdateField 1}}
                        <if test="{{$field.JavaFieldName}} != null">
                            /* {{$field.Comment}} */
                            {{$field.Name}} = #{{$field.JavaFieldName}} ,
                        </if>
                    {{end}}
                    {{end}}
                    </trim>
                    WHERE
                    {{$field.Name}} = #{{$field.JavaFieldName}}
                </update>
        {{end}}
    {{end}}
</mapper>
